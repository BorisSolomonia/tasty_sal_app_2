name: 🚫 DISABLED - Deploy Caddy Reverse Proxy (OLD)

# DISABLED - This workflow is deprecated. Use deploy.yml instead.
on:
  # Commented out to disable automatic triggers
  # push:
  #   branches: [ master ]
  #   paths: [ "Caddyfile", "compose.yml", ".github/workflows/deploy-caddy.yml" ]
  workflow_dispatch:     # Keep manual trigger for emergency use only

env:
  VM_HOST: 34.141.45.73  # Updated VM host
  CADDY_PATH: "/opt/apps/nine-tones"  # Use same directory as main app

jobs:
  deploy-caddy:
    name: 🚀 Deploy Caddy to VM
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📤 Upload Caddy Configuration
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "Caddyfile,compose.yml"
          target: ${{ env.CADDY_PATH }}
          overwrite: true

      - name: 🔧 Setup Caddy Environment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "🔧 Setting up Caddy environment..."
            
            # Create necessary directories
            sudo mkdir -p ${{ env.CADDY_PATH }}
            sudo mkdir -p /var/log/caddy
            sudo chown -R $USER:$USER ${{ env.CADDY_PATH }}
            
            # Create Docker networks
            echo "🌐 Creating Docker networks..."
            sudo docker network create web 2>/dev/null || echo "Network 'web' already exists"
            
            # Create required volumes
            echo "💾 Creating Docker volumes..."
            sudo docker volume create caddy_data 2>/dev/null || echo "Volume 'caddy_data' already exists"
            
            echo "✅ Environment setup completed"

      - name: 🚀 Deploy Caddy Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "🚀 Deploying Caddy reverse proxy..."
            
            cd ${{ env.CADDY_PATH }}
            
            # Stop existing Caddy if running
            echo "🛑 Stopping existing Caddy container..."
            sudo docker compose down 2>/dev/null || echo "No existing Caddy container"
            
            # Check if main app is already deployed
            if docker ps --format '{{.Names}}' | grep -q '^nine-tones-app$'; then
              echo "✅ Nine Tones App is already running, deploying full stack with Caddy"
              
              # Stop existing services first
              echo "🛑 Stopping existing services..."
              sudo docker compose down 2>/dev/null || echo "No existing services to stop"
              
              # Use the standardized compose.yml (already uploaded)
              echo "🌟 Deploying full stack (Nine Tones App + Caddy) using compose.yml..."
              sudo docker compose -f compose.yml up -d
            else
              echo "⚠️ Nine Tones App not found. Please deploy the main app first."
              echo "Run: GitHub Actions -> 'Build & Deploy to GCP VM'"
              exit 1
            fi
            
            # Wait for Caddy to start
            sleep 10
            
            echo "✅ Caddy deployment completed"

      - name: 🔄 Reload Caddy Configuration
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "🔄 Reloading Caddy configuration..."
            
            # Check if Caddy is running and reload config
            if sudo docker ps --format '{{.Names}}' | grep -q '^caddy$'; then
              echo "🔄 Reloading Caddy configuration..."
              sudo docker exec caddy caddy reload --config /etc/caddy/Caddyfile
              echo "✅ Configuration reloaded successfully"
            else
              echo "❌ Caddy container not running"
              exit 1
            fi

      - name: 🔍 Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "🔍 Performing Caddy health check..."
            
            # Wait for Caddy to be ready
            sleep 5
            
            # Check if Caddy container is running
            if ! sudo docker ps | grep -q caddy; then
              echo "❌ Caddy container is not running"
              sudo docker logs caddy --tail 20
              exit 1
            fi
            
            # Test HTTP endpoint
            max_attempts=6
            attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Health check attempt $attempt/$max_attempts..."
              
              if curl -f --connect-timeout 10 --max-time 30 http://localhost/ >/dev/null 2>&1; then
                echo "✅ Caddy health check passed!"
                break
              fi
              
              if [ $attempt -eq $max_attempts ]; then
                echo "❌ Caddy health check failed after $max_attempts attempts"
                echo "Container logs:"
                sudo docker logs caddy --tail 30
                exit 1
              fi
              
              sleep 10
              attempt=$((attempt + 1))
            done

      - name: 📊 Deployment Summary
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.VM_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "📊 Caddy Deployment Summary:"
            echo "=========================="
            echo "🌐 Reverse Proxy: Caddy 2"
            echo "🏠 VM Host: ${{ env.VM_HOST }}"
            echo "🔗 HTTP URL: http://${{ env.VM_HOST }}"
            echo "🎯 Target: Nine Tones App (nine-tones-app:3000/3001)"
            echo "📅 Deployed: $(date)"
            echo "👤 By: ${{ github.actor }}"
            echo ""
            echo "🔍 Container Status:"
            sudo docker ps --filter name=caddy --format "table {{.Names}}\\t{{.Status}}\\t{{.Ports}}"
            echo ""
            echo "💾 Resource Usage:"
            sudo docker stats --no-stream --format "table {{.Container}}\\t{{.CPUPerc}}\\t{{.MemUsage}}" caddy
